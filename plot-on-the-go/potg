#! /usr/bin/env python3
# potg
# Copyright (c) 2021 David Bucher <David.Bucher@physik.lmu.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

import fileinput
import matplotlib.pyplot as plt
import argparse


def parse_line(line):
    line = line.strip()
    if(line.startswith('(')):
        line, _ = line.strip('()').split(',')
    return float(line)


parser = argparse.ArgumentParser(description='Plot stdin values live.')
parser.add_argument('-r', '--reference', type=float)
parser.add_argument('-i', '--input', type=str, default='-')
parser.add_argument('other', nargs='*')
args = parser.parse_args()

othervals = []
for o in args.other:
    with open(o, 'r') as f:
        othervals.append([parse_line(l) for l in f])

vals = []

plt.ion()
for line in fileinput.input(args.input):
    print(line, end='')
    plt.clf()
    vals.append(parse_line(line))
    plt.plot(vals, 'k', linewidth=2)
    if args.reference is not None:
        plt.axhline(y=args.reference, color='r', linestyle='--')
    for other in othervals:
        plt.polot(other[:len(val)])
    plt.draw()
    plt.pause(0.001)

plt.ioff()
plt.clf()
plt.plot(vals)
plt.scatter(len(vals)-1, vals[-1], color='orange')
plt.show()
