#!/usr/bin/env sh

if [ ! -d logs ]; then
  mkdir logs
fi

if [ ! -f $1 ]; then
  echo First argument must be a valid file
  exit 1
else
  ini=$1
  shift
fi

force="-f"
if [ "$1" == "-n" ]; then
  force=""
  shift
fi

rand="--seed=$RANDOM"
if [ "$1" == "-r" ]; then
  rand=""
  shift
fi

tasks=`awk -F= -v key="#TASKS" '$1==key {print $2}' "$ini"`
omp=`awk -F= -v key="#OMP" '$1==key {print $2}' "$ini"`
cluster=`awk -F= -v key="#CLUSTER" '$1==key {print $2}' "$ini"`
partition=`awk -F= -v key="#PARTITION" '$1==key {print $2}' "$ini"`
#threads=`awk -F= -v key="n_threads" '{gsub(/ /,"")} $1==key {print $2}' "$ini"`
name=`awk -F= -v key="name" '{gsub(/ /,"")} $1==key {print $2}' "$ini"`

if [ -z $tasks ]; then
  tasks=28
fi
if [ -z $cluster ]; then
  cluster="cm2_tiny"
fi
if [ -z $partition ]; then
  partition="cm2_tiny"
fi
# if [ -z $threads ]; then
#   threads=28
# fi
if [ -z $name ]; then
  name=noname
fi
if [ -z $omp ]; then
  omp=1
fi

addstr=""
for arg in $@; do
  addstr="${addstr}_`echo $arg | sed -r -e 's/^--(\w+\.)*(\w)\w*=/\2/g'`"
done
name="$name$addstr"


sub="#!/usr/bin/env sh
#SBATCH -o logs/log.%j.%N.out
#SBATCH -e logs/error.%j.%N.out
#SBATCH -J $name
#SBATCH -D ./
#SBATCH --get-user-env
#SBATCH --clusters=$cluster
#SBATCH --partition=$partition
#SBATCH --ntasks=$tasks
#SBATCH --cpus-per-task=$omp
#SBATCH --mail-type=end
#SBATCH --mail-user=David.Bucher@physik.lmu.de
#SBATCH --export=NONE
#SBATCH --time=72:00:00

module load slurm_setup

source set_compiler.sh $CC
source load_modules.sh

echo \"\$SLURM_JOB_ID $name\" >> ./tasks.log

export OMP_NUM_THREADS=$omp
mpiexec -n $tasks rbm -i $ini $force -P --train --evaluate --name=$name $r $@"

echo "$sub"
